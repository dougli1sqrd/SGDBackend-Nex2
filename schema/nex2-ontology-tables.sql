-- Generated by Ora2Pg, the Oracle database Schema converter, version 17.4
-- Copyright 2000-2016 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=sgd-nex2-db.stanford.edu;sid=SGD

SET client_encoding TO 'UTF8';

\set ON_ERROR_STOP ON


-- Ontology tables

DROP TABLE IF EXISTS apo CASCADE; 
CREATE TABLE apo (
	apo_id bigint NOT NULL DEFAULT nextval('object_seq'),
	format_name varchar(100) NOT NULL,
	display_name varchar(500) NOT NULL,
	obj_url varchar(500) NOT NULL,
	source_id bigint NOT NULL,
	apoid varchar(20) NOT NULL,
	apo_namespace varchar(20) NOT NULL,
	namespace_group varchar(40),
	description varchar(1000),
	date_created timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	created_by varchar(12) NOT NULL,
	CONSTRAINT apo_pk PRIMARY KEY (apo_id)
) ;
COMMENT ON TABLE apo IS 'Ascomycete Phenotype Ontology (APO) created and maintained SGD.';
COMMENT ON COLUMN apo.apo_id IS 'Unique identifier (serial number).';
COMMENT ON COLUMN apo.description IS 'Description or comment.';
COMMENT ON COLUMN apo.created_by IS 'Username of the person who entered the record into the database.';
COMMENT ON COLUMN apo.source_id IS 'FK to SOURCE.SOURCE_ID.';
COMMENT ON COLUMN apo.date_created IS 'Date the record was entered into the database.';
COMMENT ON COLUMN apo.apo_namespace IS 'Aspect or vocabulary groupings (observable, qualifier, experiment_type, mutant_type).';
COMMENT ON COLUMN apo.display_name IS 'Public display name.';
COMMENT ON COLUMN apo.namespace_group IS 'A way to group terms within a namespace together.';
COMMENT ON COLUMN apo.format_name IS 'Unique name to create download files.';
COMMENT ON COLUMN apo.obj_url IS 'URL of the object (relative for local links or complete for external links).';
COMMENT ON COLUMN apo.apoid IS 'Phenotype identifier (e.g., APO:0000009) or new term requests (NTR).';
ALTER TABLE apo ADD CONSTRAINT apo_uk UNIQUE (format_name);
ALTER TABLE apo ADD CONSTRAINT apo_namespace_ck CHECK (APO_NAMESPACE IN ('observable','qualifier','experiment_type','mutant_type'));
CREATE INDEX apo_source_fk_index ON apo (source_id);
CREATE UNIQUE INDEX apoid_uk_index ON apo (apoid);

DROP TABLE IF EXISTS apo_alias CASCADE;
CREATE TABLE apo_alias (
	alias_id bigint NOT NULL DEFAULT nextval('alias_seq'),
	display_name varchar(500) NOT NULL,
	source_id bigint NOT NULL,
	apo_id bigint NOT NULL,
	alias_type varchar(40) NOT NULL,
	date_created timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	created_by varchar(12) NOT NULL,
	CONSTRAINT apo_alias_pk PRIMARY KEY (alias_id)
) ;
COMMENT ON TABLE apo_alias IS 'Other names or synonyms for the phenotype.';
COMMENT ON COLUMN apo_alias.display_name IS 'Public display name.';
COMMENT ON COLUMN apo_alias.apo_id IS 'FK to APO.APO_ID.';
COMMENT ON COLUMN apo_alias.source_id IS 'FK to SOURCE.SOURCE_ID.';
COMMENT ON COLUMN apo_alias.created_by IS 'Username of the person who entered the record into the database.';
COMMENT ON COLUMN apo_alias.date_created IS 'Date the record was entered into the database.';
COMMENT ON COLUMN apo_alias.alias_id IS 'Unique identifier (serial number).';
COMMENT ON COLUMN apo_alias.alias_type IS 'Type of alias (EXACT, RELATED).';
ALTER TABLE apo_alias ADD CONSTRAINT apo_alias_uk UNIQUE (apo_id,display_name,alias_type);
ALTER TABLE apo_alias ADD CONSTRAINT apoalias_type_ck CHECK (ALIAS_TYPE IN ('EXACT','RELATED'));
CREATE INDEX apoalias_source_fk_index ON apo_alias (source_id);

DROP TABLE IF EXISTS apo_relation CASCADE;
CREATE TABLE apo_relation (
	relation_id bigint NOT NULL DEFAULT nextval('relation_seq'),
	source_id bigint NOT NULL,
	parent_id bigint NOT NULL,
	child_id bigint NOT NULL,
	ro_id bigint NOT NULL,
	date_created timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	created_by varchar(12) NOT NULL,
	CONSTRAINT apo_relation_pk PRIMARY KEY (relation_id)
) ;
COMMENT ON TABLE apo_relation IS 'Relationship between two phenotypes.';
COMMENT ON COLUMN apo_relation.child_id IS 'FK to APO.APO_ID.';
COMMENT ON COLUMN apo_relation.parent_id IS 'FK to APO.APO_ID.';
COMMENT ON COLUMN apo_relation.date_created IS 'Date the record was entered into the database.';
COMMENT ON COLUMN apo_relation.source_id IS 'FK to SOURCE.SOURCE_ID.';
COMMENT ON COLUMN apo_relation.ro_id IS 'FK to RO.RO_ID.';
COMMENT ON COLUMN apo_relation.created_by IS 'Username of the person who entered the record into the database.';
COMMENT ON COLUMN apo_relation.relation_id IS 'Unique identifier (serial number).';
ALTER TABLE apo_relation ADD CONSTRAINT apo_relation_uk UNIQUE (parent_id,child_id,ro_id);
CREATE INDEX aporelation_source_fk_index ON apo_relation (source_id);
CREATE INDEX aporelation_child_fk_index ON apo_relation (child_id);
CREATE INDEX aporelation_ro_fk_index ON apo_relation (ro_id);

DROP TABLE IF EXISTS apo_url CASCADE;
CREATE TABLE apo_url (
	url_id bigint NOT NULL DEFAULT nextval('url_seq'),
	display_name varchar(500) NOT NULL,
	obj_url varchar(500) NOT NULL,
	source_id bigint NOT NULL,
	apo_id bigint NOT NULL,
	url_type varchar(40) NOT NULL,
	date_created timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	created_by varchar(12) NOT NULL,
	CONSTRAINT apo_url_pk PRIMARY KEY (url_id)
) ;
COMMENT ON TABLE apo_url IS 'URLs associated with phenotype.';
COMMENT ON COLUMN apo_url.url_id IS 'Unique identifier (serial number).';
COMMENT ON COLUMN apo_url.obj_url IS 'URL of the object (relative for local links or complete for external links).';
COMMENT ON COLUMN apo_url.display_name IS 'Public display name (BioPortal, OLS, Ontobee).';
COMMENT ON COLUMN apo_url.date_created IS 'Date the record was entered into the database.';
COMMENT ON COLUMN apo_url.apo_id IS 'FK to APO.APO_ID.';
COMMENT ON COLUMN apo_url.url_type IS 'Type of URL (BioPortal, OLS, Ontobee).';
COMMENT ON COLUMN apo_url.created_by IS 'Username of the person who entered the record into the database.';
COMMENT ON COLUMN apo_url.source_id IS 'FK to SOURCE.SOURCE_ID.';
ALTER TABLE apo_url ADD CONSTRAINT apo_url_uk UNIQUE (apo_id,display_name,obj_url);
ALTER TABLE apo_url ADD CONSTRAINT apourl_display_name_ck CHECK (DISPLAY_NAME IN ('BioPortal','OLS', 'Ontobee'));
ALTER TABLE apo_url ADD CONSTRAINT apourl_type_ck CHECK (URL_TYPE IN ('BioPortal','OLS', 'Ontobee'));
CREATE INDEX apourl_source_fk_index ON apo_url (source_id);

DROP TABLE IF EXISTS chebi CASCADE;
CREATE TABLE chebi (
	chebi_id bigint NOT NULL DEFAULT nextval('object_seq'),
	format_name varchar(100) NOT NULL,
	display_name varchar(500) NOT NULL,
	obj_url varchar(500) NOT NULL,
	source_id bigint NOT NULL,
	chebiid varchar(20) NOT NULL,
	description varchar(2000),
	date_created timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	created_by varchar(12) NOT NULL,
	CONSTRAINT chebi_pk PRIMARY KEY (chebi_id)
) ;
COMMENT ON TABLE chebi IS 'Chemical Entities of Biological Interest (ChEBI) from the EBI.';
COMMENT ON COLUMN chebi.date_created IS 'Date the record was entered into the database.';
COMMENT ON COLUMN chebi.source_id IS 'FK to SOURCE.SOURCE_ID.';
COMMENT ON COLUMN chebi.created_by IS 'Username of the person who entered the record into the database.';
COMMENT ON COLUMN chebi.description IS 'Description or comment.';
COMMENT ON COLUMN chebi.chebi_id IS 'Unique identifier (serial number).';
COMMENT ON COLUMN chebi.obj_url IS 'URL of the object (relative for local links or complete for external links).';
COMMENT ON COLUMN chebi.format_name IS 'Unique name to create download files.';
COMMENT ON COLUMN chebi.chebiid IS 'Chemical identifier from the EBI (e.g., CHEBI:58471) or new term requests (NTR).';
COMMENT ON COLUMN chebi.display_name IS 'Public display name.';
ALTER TABLE chebi ADD CONSTRAINT chebi_uk UNIQUE (format_name);
CREATE UNIQUE INDEX chebiid_uk_index ON chebi (chebiid);
CREATE INDEX chebi_source_fk_index ON chebi (source_id);

DROP TABLE IF EXISTS chebi_alias CASCADE;
CREATE TABLE chebi_alias (
	alias_id bigint NOT NULL DEFAULT nextval('alias_seq'),
	display_name varchar(500) NOT NULL,
	source_id bigint NOT NULL,
	chebi_id bigint NOT NULL,
	alias_type varchar(40) NOT NULL,
	date_created timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	created_by varchar(12) NOT NULL,
	CONSTRAINT chebi_alias_pk PRIMARY KEY (alias_id)
) ;
COMMENT ON TABLE chebi_alias IS 'Other names or synonyms for the chemical.';
COMMENT ON COLUMN chebi_alias.chebi_id IS 'FK to CHEBI.CHEBI_ID.';
COMMENT ON COLUMN chebi_alias.display_name IS 'Public display name.';
COMMENT ON COLUMN chebi_alias.date_created IS 'Date the record was entered into the database.';
COMMENT ON COLUMN chebi_alias.alias_type IS 'Type of alias (EXACT, RELATED, Secondary ChEBI ID, IUPAC name).';
COMMENT ON COLUMN chebi_alias.alias_id IS 'Unique identifier (serial number).';
COMMENT ON COLUMN chebi_alias.source_id IS 'FK to SOURCE.SOURCE_ID.';
COMMENT ON COLUMN chebi_alias.created_by IS 'Username of the person who entered the record into the database.';
ALTER TABLE chebi_alias ADD CONSTRAINT chebi_alias_uk UNIQUE (chebi_id,display_name,alias_type);
ALTER TABLE chebi_alias ADD CONSTRAINT chebialias_type_ck CHECK (ALIAS_TYPE IN ('EXACT','RELATED','Secondary ChEBI ID','IUPAC name'));
CREATE INDEX chebialias_source_fk_index ON chebi_alias (source_id);

DROP TABLE IF EXISTS chebi_relation CASCADE;
CREATE TABLE chebi_relation (
	relation_id bigint NOT NULL DEFAULT nextval('relation_seq'),
	source_id bigint NOT NULL,
	parent_id bigint NOT NULL,
	child_id bigint NOT NULL,
	ro_id bigint NOT NULL,
	date_created timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	created_by varchar(12) NOT NULL,
	CONSTRAINT chebi_relation_pk PRIMARY KEY (relation_id)
) ;
COMMENT ON TABLE chebi_relation IS 'Relationship between two chemicals.';
COMMENT ON COLUMN chebi_relation.ro_id IS 'FK to RO.RO_ID.';
COMMENT ON COLUMN chebi_relation.source_id IS 'FK to SOURCE.SOURCE_ID.';
COMMENT ON COLUMN chebi_relation.created_by IS 'Username of the person who entered the record into the database.';
COMMENT ON COLUMN chebi_relation.relation_id IS 'Unique identifier (serial number).';
COMMENT ON COLUMN chebi_relation.date_created IS 'Date the record was entered into the database.';
COMMENT ON COLUMN chebi_relation.parent_id IS 'FK to CHEBI_ID.';
COMMENT ON COLUMN chebi_relation.child_id IS 'FK to CHEBI_ID.';
ALTER TABLE chebi_relation ADD CONSTRAINT chebi_relation_uk UNIQUE (parent_id,child_id,ro_id);
CREATE INDEX chebirelation_ro_fk_index ON chebi_relation (ro_id);
CREATE INDEX chebirelation_source_fk_index ON chebi_relation (source_id);
CREATE INDEX chebirelation_child_fk_index ON chebi_relation (child_id);

DROP TABLE IF EXISTS chebi_url cascade;
CREATE TABLE chebi_url (
	url_id bigint NOT NULL DEFAULT nextval('url_seq'),
	display_name varchar(500) NOT NULL,
	obj_url varchar(500) NOT NULL,
	source_id bigint NOT NULL,
	chebi_id bigint NOT NULL,
	url_type varchar(40) NOT NULL,
	date_created timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	created_by varchar(12) NOT NULL,
	CONSTRAINT chebi_url_pk PRIMARY KEY (url_id)
) ;
COMMENT ON TABLE chebi_url IS 'URLs associated with chemicals.';
COMMENT ON COLUMN chebi_url.url_type IS 'Type of URL (ChEBI).';
COMMENT ON COLUMN chebi_url.created_by IS 'Username of the person who entered the record into the database.';
COMMENT ON COLUMN chebi_url.source_id IS 'FK to SOURCE.SOURCE_ID.';
COMMENT ON COLUMN chebi_url.date_created IS 'Date the record was entered into the database.';
COMMENT ON COLUMN chebi_url.display_name IS 'Public display name (ChEBI).';
COMMENT ON COLUMN chebi_url.url_id IS 'Unique identifier (serial number).';
COMMENT ON COLUMN chebi_url.obj_url IS 'URL of the object (relative for local links or complete for external links).';
COMMENT ON COLUMN chebi_url.chebi_id IS 'FK to CHEBI.CHEBI_ID.';
ALTER TABLE chebi_url ADD CONSTRAINT chebi_url_uk UNIQUE (chebi_id,display_name,obj_url);
ALTER TABLE chebi_url ADD CONSTRAINT chebiurl_display_name_ck CHECK (DISPLAY_NAME IN ('ChEBI'));
ALTER TABLE chebi_url ADD CONSTRAINT chebiurl_type_ck CHECK (URL_TYPE IN ('ChEBI'));
CREATE INDEX chebiurl_source_fk_index ON chebi_url (source_id);

DROP TABLE IF EXISTS disease CASCADE;
CREATE TABLE disease (
	disease_id bigint NOT NULL DEFAULT nextval('object_seq'),
	format_name varchar(100) NOT NULL,
	display_name varchar(500) NOT NULL,
	obj_url varchar(500) NOT NULL,
	source_id bigint NOT NULL,
	doid varchar(20) NOT NULL,
	description varchar(2000),
	date_created timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	created_by varchar(12) NOT NULL,
	CONSTRAINT do_pk PRIMARY KEY (disease_id)
) ;
COMMENT ON TABLE disease IS 'Disease Ontology (DO).';
COMMENT ON COLUMN disease.display_name IS 'Public display name.';
COMMENT ON COLUMN disease.doid IS 'Disease ontology identifier (e.g., DOID:4159).';
COMMENT ON COLUMN disease.obj_url IS 'URL of the object (relative for local links or complete for external links).';
COMMENT ON COLUMN disease.disease_id IS 'Unique identifier (serial number).';
COMMENT ON COLUMN disease.format_name IS 'Unique name to create download files.';
COMMENT ON COLUMN disease.created_by IS 'Username of the person who entered the record into the database.';
COMMENT ON COLUMN disease.source_id IS 'FK to SOURCE.SOURCE_ID.';
COMMENT ON COLUMN disease.description IS 'Description or comment.';
COMMENT ON COLUMN disease.date_created IS 'Date the record was entered into the database.';
ALTER TABLE disease ADD CONSTRAINT do_uk UNIQUE (format_name);
CREATE UNIQUE INDEX doid_uk_index ON disease (doid);
CREATE INDEX disease_source_fk_index ON disease (source_id);

DROP TABLE IF EXISTS disease_alias CASCADE;
CREATE TABLE disease_alias (
	alias_id bigint NOT NULL DEFAULT nextval('alias_seq'),
	display_name varchar(500) NOT NULL,
	source_id bigint NOT NULL,
	disease_id bigint NOT NULL,
	alias_type varchar(40) NOT NULL,
	date_created timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	created_by varchar(12) NOT NULL,
	CONSTRAINT disease_alias_pk PRIMARY KEY (alias_id)
) ;
COMMENT ON TABLE disease_alias IS 'Other names, synonyms or cross references for the disease.';
COMMENT ON COLUMN disease_alias.alias_id IS 'Unique identifier (serial number).';
COMMENT ON COLUMN disease_alias.alias_type IS 'Type of alias (EXACT, RELATED, Alternate ID, DBXREF).';
COMMENT ON COLUMN disease_alias.date_created IS 'Date the record was entered into the database.';
COMMENT ON COLUMN disease_alias.created_by IS 'Username of the person who entered the record into the database.';
COMMENT ON COLUMN disease_alias.source_id IS 'FK to SOURCE.SOURCE_ID.';
COMMENT ON COLUMN disease_alias.disease_id IS 'FK to DISEASE.DISEASE_ID.';
COMMENT ON COLUMN disease_alias.display_name IS 'Public display name.';
ALTER TABLE disease_alias ADD CONSTRAINT disease_alias_uk UNIQUE (disease_id,display_name,alias_type);
ALTER TABLE disease_alias ADD CONSTRAINT diseasealias_type_ck CHECK (ALIAS_TYPE IN ('EXACT','RELATED','Alternate ID','DBXREF'));
CREATE INDEX diseasealias_source_fk_index ON disease_alias (source_id);

DROP TABLE IF EXISTS disease_relation CASCADE;
CREATE TABLE disease_relation (
	relation_id bigint NOT NULL DEFAULT nextval('relation_seq'),
	source_id bigint NOT NULL,
	parent_id bigint NOT NULL,
	child_id bigint NOT NULL,
	ro_id bigint NOT NULL,
	date_created timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	created_by varchar(12) NOT NULL,
	CONSTRAINT disease_relation_pk PRIMARY KEY (relation_id)
) ;
COMMENT ON TABLE disease_relation IS 'Relationship between two diseases.';
COMMENT ON COLUMN disease_relation.child_id IS 'FK to DISEASE_ID.';
COMMENT ON COLUMN disease_relation.parent_id IS 'FK to DISEASE_ID.';
COMMENT ON COLUMN disease_relation.date_created IS 'Date the record was entered into the database.';
COMMENT ON COLUMN disease_relation.ro_id IS 'FK to RO.RO_ID.';
COMMENT ON COLUMN disease_relation.source_id IS 'FK to SOURCE.SOURCE_ID.';
COMMENT ON COLUMN disease_relation.created_by IS 'Username of the person who entered the record into the database.';
COMMENT ON COLUMN disease_relation.relation_id IS 'Unique identifier (serial number).';
ALTER TABLE disease_relation ADD CONSTRAINT disease_relation_uk UNIQUE (parent_id,child_id,ro_id);
CREATE INDEX diseaserelation_source_fk_index ON disease_relation (source_id);
CREATE INDEX diseaserelation_child_fk_index ON disease_relation (child_id);
CREATE INDEX diseaserelation_ro_fk_index ON disease_relation (ro_id);

DROP TABLE IF EXISTS disease_url CASCADE;
CREATE TABLE disease_url (
	url_id bigint NOT NULL DEFAULT nextval('url_seq'),
	display_name varchar(500) NOT NULL,
	obj_url varchar(500) NOT NULL,
	source_id bigint NOT NULL,
	disease_id bigint NOT NULL,
	url_type varchar(40) NOT NULL,
	date_created timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	created_by varchar(12) NOT NULL,
	CONSTRAINT disease_url_pk PRIMARY KEY (url_id)
) ;
COMMENT ON TABLE disease_url IS 'URLs associated with diseases.';
COMMENT ON COLUMN disease_url.display_name IS 'Public display name (DO, BioPortal, OLS, Ontobee).';
COMMENT ON COLUMN disease_url.obj_url IS 'URL of the object (relative for local links or complete for external links).';
COMMENT ON COLUMN disease_url.disease_id IS 'FK to DISEASE.DISEASE_ID.';
COMMENT ON COLUMN disease_url.url_id IS 'Unique identifier (serial number).';
COMMENT ON COLUMN disease_url.url_type IS 'Type of URL (DO, BioPortal, OLS, Ontobee).';
COMMENT ON COLUMN disease_url.source_id IS 'FK to SOURCE.SOURCE_ID.';
COMMENT ON COLUMN disease_url.created_by IS 'Username of the person who entered the record into the database.';
COMMENT ON COLUMN disease_url.date_created IS 'Date the record was entered into the database.';
ALTER TABLE disease_url ADD CONSTRAINT disease_url_uk UNIQUE (disease_id,display_name,obj_url);
ALTER TABLE disease_url ADD CONSTRAINT diseaseurl_display_name_ck CHECK (DISPLAY_NAME IN ('DO', 'BioPortal', 'OLS', 'Ontobee'));
ALTER TABLE disease_url ADD CONSTRAINT diseaseurl_type_ck CHECK (URL_TYPE IN ('DO', 'BioPortal', 'OLS', 'Ontobee'));
CREATE INDEX diseaseurl_source_fk_index ON disease_url (source_id);

DROP TABLE IF EXISTS ec CASCADE;
CREATE TABLE ec (
	ec_id bigint NOT NULL DEFAULT nextval('object_seq'),
	format_name varchar(100) NOT NULL,
	display_name varchar(500) NOT NULL,
	obj_url varchar(500) NOT NULL,
	source_id bigint NOT NULL,
	ecid varchar(20) NOT NULL,
	description varchar(1000),
	date_created timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	created_by varchar(12) NOT NULL,
	CONSTRAINT ec_pk PRIMARY KEY (ec_id)
) ;
COMMENT ON TABLE ec IS 'Enzyme Commission (EC) numbers based on chemical reactions catalyzed by enzymes.';
COMMENT ON COLUMN ec.display_name IS 'Public display name (e.g., 3.1.26.5).';
COMMENT ON COLUMN ec.obj_url IS 'URL of the object (relative for local links or complete for external links).';
COMMENT ON COLUMN ec.format_name IS 'Unique name to create download files.';
COMMENT ON COLUMN ec.created_by IS 'Username of the person who entered the record into the database.';
COMMENT ON COLUMN ec.source_id IS 'FK to SOURCE.SOURCE_ID.';
COMMENT ON COLUMN ec.description IS 'Description or comment.';
COMMENT ON COLUMN ec.date_created IS 'Date the record was entered into the database.';
COMMENT ON COLUMN ec.ec_id IS 'Unique identifier (serial number).';
COMMENT ON COLUMN ec.ecid IS 'Enzyme Commission number (e.g., EC 3.1.26.5).';
ALTER TABLE ec ADD CONSTRAINT ec_uk UNIQUE (format_name);
CREATE INDEX ec_source_fk_index ON ec (source_id);
CREATE UNIQUE INDEX ecnumber_uk_index ON ec (ecid);

DROP TABLE IF EXISTS ec_alias CASCADE;
CREATE TABLE ec_alias (
	alias_id bigint NOT NULL DEFAULT nextval('alias_seq'),
	display_name varchar(500) NOT NULL,
	source_id bigint NOT NULL,
	ec_id bigint NOT NULL,
	alias_type varchar(40) NOT NULL,
	date_created timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	created_by varchar(12) NOT NULL,
	CONSTRAINT ec_alias_pk PRIMARY KEY (alias_id)
) ;
COMMENT ON TABLE ec_alias IS 'Other names or synonyms for an enzyme.';
COMMENT ON COLUMN ec_alias.created_by IS 'Username of the person who entered the record into the database.';
COMMENT ON COLUMN ec_alias.source_id IS 'FK to SOURCE.SOURCE_ID.';
COMMENT ON COLUMN ec_alias.alias_id IS 'Unique identifier (serial number).';
COMMENT ON COLUMN ec_alias.alias_type IS 'Type of alias (Synonym).';
COMMENT ON COLUMN ec_alias.ec_id IS 'FK to EC.EC_ID.';
COMMENT ON COLUMN ec_alias.date_created IS 'Date the record was entered into the database.';
COMMENT ON COLUMN ec_alias.display_name IS 'Public display name.';
ALTER TABLE ec_alias ADD CONSTRAINT ec_alias_uk UNIQUE (ec_id,display_name,alias_type);
ALTER TABLE ec_alias ADD CONSTRAINT ecalias_type_ck CHECK (ALIAS_TYPE IN ('Synonym'));
CREATE INDEX ecalias_source_fk_index ON ec_alias (source_id);

DROP TABLE IF EXISTS ec_url CASCADE;
CREATE TABLE ec_url (
	url_id bigint NOT NULL DEFAULT nextval('url_seq'),
	display_name varchar(500) NOT NULL,
	obj_url varchar(500) NOT NULL,
	source_id bigint NOT NULL,
	ec_id bigint NOT NULL,
	url_type varchar(40) NOT NULL,
	date_created timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	created_by varchar(12) NOT NULL,
	CONSTRAINT ec_url_pk PRIMARY KEY (url_id)
) ;
COMMENT ON TABLE ec_url IS 'URLs associated with enzyzmes.';
COMMENT ON COLUMN ec_url.created_by IS 'Username of the person who entered the record into the database.';
COMMENT ON COLUMN ec_url.source_id IS 'FK to SOURCE.SOURCE_ID.';
COMMENT ON COLUMN ec_url.url_type IS 'Type of URL (ExPASy, BRENDA).';
COMMENT ON COLUMN ec_url.ec_id IS 'FK to EC.EC_ID.';
COMMENT ON COLUMN ec_url.date_created IS 'Date the record was entered into the database.';
COMMENT ON COLUMN ec_url.display_name IS 'Public display name (ExPASy, BRENDA).';
COMMENT ON COLUMN ec_url.url_id IS 'Unique identifier (serial number).';
COMMENT ON COLUMN ec_url.obj_url IS 'URL of the object (relative for local links or complete for external links).';
ALTER TABLE ec_url ADD CONSTRAINT ec_url_uk UNIQUE (ec_id,display_name,obj_url);
ALTER TABLE ec_url ADD CONSTRAINT ecurl_type_ck CHECK (URL_TYPE IN ('ExPASy','BRENDA'));
ALTER TABLE ec_url ADD CONSTRAINT ecurl_display_name_ck CHECK (DISPLAY_NAME IN ('ExPASy','BRENDA'));
CREATE INDEX ecurl_source_fk_index ON ec_url (source_id);

DROP TABLE IF EXISTS eco CASCADE;
CREATE TABLE eco (
	eco_id bigint NOT NULL DEFAULT nextval('object_seq'),
	format_name varchar(100) NOT NULL,
	display_name varchar(500) NOT NULL,
	obj_url varchar(500) NOT NULL,
	source_id bigint NOT NULL,
	ecoid varchar(20) NOT NULL,
	description varchar(1000),
	date_created timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	created_by varchar(12) NOT NULL,
	CONSTRAINT eco_pk PRIMARY KEY (eco_id)
) ;
COMMENT ON TABLE eco IS 'Evidence Ontology (ECO) describes types of scientific evidence.';
COMMENT ON COLUMN eco.eco_id IS 'Unique identifier (serial number).';
COMMENT ON COLUMN eco.date_created IS 'Date the record was entered into the database.';
COMMENT ON COLUMN eco.source_id IS 'FK to SOURCE.SOURCE_ID.';
COMMENT ON COLUMN eco.description IS 'Description or comment.';
COMMENT ON COLUMN eco.created_by IS 'Username of the person who entered the record into the database.';
COMMENT ON COLUMN eco.obj_url IS 'URL of the object (relative for local links or complete for external links).';
COMMENT ON COLUMN eco.format_name IS 'Unique name to create download files.';
COMMENT ON COLUMN eco.ecoid IS 'Evidence ontology identifier (e.g. ECO:0000168).';
COMMENT ON COLUMN eco.display_name IS 'Public display name.';
ALTER TABLE eco ADD CONSTRAINT eco_uk UNIQUE (format_name);
CREATE UNIQUE INDEX ecoid_uk_index ON eco (ecoid);
CREATE INDEX eco_source_fk_index ON eco (source_id);

DROP TABLE IF EXISTS eco_alias CASCADE;
CREATE TABLE eco_alias (
	alias_id bigint NOT NULL DEFAULT nextval('alias_seq'),
	display_name varchar(500) NOT NULL,
	source_id bigint NOT NULL,
	eco_id bigint NOT NULL,
	alias_type varchar(40) NOT NULL,
	date_created timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	created_by varchar(12) NOT NULL,
	CONSTRAINT eco_alias_pk PRIMARY KEY (alias_id)
) ;
COMMENT ON TABLE eco_alias IS 'Other names or synonyms for types of evidence.';
COMMENT ON COLUMN eco_alias.alias_type IS 'Type of alias (BROAD, EXACT, RELATED, NARROW).';
COMMENT ON COLUMN eco_alias.alias_id IS 'Unique identifier (serial number).';
COMMENT ON COLUMN eco_alias.eco_id IS 'FK to ECO.ECO_ID.';
COMMENT ON COLUMN eco_alias.date_created IS 'Date the record was entered into the database.';
COMMENT ON COLUMN eco_alias.created_by IS 'Username of the person who entered the record into the database.';
COMMENT ON COLUMN eco_alias.source_id IS 'FK to SOURCE.SOURCE_ID.';
COMMENT ON COLUMN eco_alias.display_name IS 'Public display name.';
ALTER TABLE eco_alias ADD CONSTRAINT eco_alias_uk UNIQUE (eco_id,display_name,alias_type);
ALTER TABLE eco_alias ADD CONSTRAINT ecoalias_type_ck CHECK (ALIAS_TYPE IN ('BROAD','EXACT','RELATED','NARROW'));
CREATE INDEX ecoalias_source_fk_index ON eco_alias (source_id);

DROP TABLE IF EXISTS eco_relation CASCADE;
CREATE TABLE eco_relation (
	relation_id bigint NOT NULL DEFAULT nextval('relation_seq'),
	source_id bigint NOT NULL,
	parent_id bigint NOT NULL,
	child_id bigint NOT NULL,
	ro_id bigint NOT NULL,
	date_created timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	created_by varchar(12) NOT NULL,
	CONSTRAINT eco_relation_pk PRIMARY KEY (relation_id)
) ;
COMMENT ON TABLE eco_relation IS 'Relationship between two evidence types.';
COMMENT ON COLUMN eco_relation.relation_id IS 'Unique identifier (serial number).';
COMMENT ON COLUMN eco_relation.created_by IS 'Username of the person who entered the record into the database.';
COMMENT ON COLUMN eco_relation.ro_id IS 'FK to RO.RO_ID.';
COMMENT ON COLUMN eco_relation.source_id IS 'FK to SOURCE.SOURCE_ID.';
COMMENT ON COLUMN eco_relation.date_created IS 'Date the record was entered into the database.';
COMMENT ON COLUMN eco_relation.child_id IS 'FK to ECO.ECO_ID.';
COMMENT ON COLUMN eco_relation.parent_id IS 'FK to ECO.ECO_ID.';
ALTER TABLE eco_relation ADD CONSTRAINT eco_relation_uk UNIQUE (parent_id,child_id,ro_id);
CREATE INDEX ecorelation_ro_fk_index ON eco_relation (ro_id);
CREATE INDEX ecorelation_source_fk_index ON eco_relation (source_id);
CREATE INDEX ecorelation_child_fk_index ON eco_relation (child_id);

DROP TABLE IF EXISTS eco_url CASCADE;
CREATE TABLE eco_url (
	url_id bigint NOT NULL DEFAULT nextval('url_seq'),
	display_name varchar(500) NOT NULL,
	obj_url varchar(500) NOT NULL,
	source_id bigint NOT NULL,
	eco_id bigint NOT NULL,
	url_type varchar(40) NOT NULL,
	date_created timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	created_by varchar(12) NOT NULL,
	CONSTRAINT eco_url_pk PRIMARY KEY (url_id)
) ;
COMMENT ON TABLE eco_url IS 'URLs associated with evidence types.';
COMMENT ON COLUMN eco_url.date_created IS 'Date the record was entered into the database.';
COMMENT ON COLUMN eco_url.eco_id IS 'FK to ECO.ECO_ID.';
COMMENT ON COLUMN eco_url.created_by IS 'Username of the person who entered the record into the database.';
COMMENT ON COLUMN eco_url.source_id IS 'FK to SOURCE.SOURCE_ID.';
COMMENT ON COLUMN eco_url.url_type IS 'Type of URL (BioPortal, OLS, Ontobee).';
COMMENT ON COLUMN eco_url.obj_url IS 'URL of the object (relative for local links or complete for external links).';
COMMENT ON COLUMN eco_url.url_id IS 'Unique identifier (serial number).';
COMMENT ON COLUMN eco_url.display_name IS 'Public display name (BioPortal, OLS, Ontobee).';
ALTER TABLE eco_url ADD CONSTRAINT eco_url_uk UNIQUE (eco_id,display_name,obj_url);
ALTER TABLE eco_url ADD CONSTRAINT ecourl_display_name_ck CHECK (DISPLAY_NAME IN ('BioPortal','OLS', 'Ontobee'));
ALTER TABLE eco_url ADD CONSTRAINT ecourl_type_ck CHECK (URL_TYPE IN ('BioPortal','OLS', 'Ontobee'));
CREATE INDEX ecourl_source_fk_index ON eco_url (source_id);

DROP TABLE IF EXISTS edam CASCADE;
CREATE TABLE edam (
	edam_id bigint NOT NULL DEFAULT nextval('object_seq'),
	format_name varchar(100) NOT NULL,
	display_name varchar(500) NOT NULL,
	obj_url varchar(500) NOT NULL,
	source_id bigint NOT NULL,
	edamid varchar(20) NOT NULL,
	edam_namespace varchar(20) NOT NULL,
	description varchar(2000),
	date_created timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	created_by varchar(12) NOT NULL,
	CONSTRAINT edam_pk PRIMARY KEY (edam_id)
) ;
COMMENT ON TABLE edam IS 'EDAM is an ontology of bioinformatics topics, operations, types of data including identifiers, and data formats.';
COMMENT ON COLUMN edam.edam_namespace IS 'Four separate domains or namespaces (data, format, operation, topic).';
COMMENT ON COLUMN edam.edam_id IS 'Unique identifier (serial number).';
COMMENT ON COLUMN edam.edamid IS 'EDAM identifier (e.g. EDAM:0928).';
COMMENT ON COLUMN edam.date_created IS 'Date the record was entered into the database.';
COMMENT ON COLUMN edam.created_by IS 'Username of the person who entered the record into the database.';
COMMENT ON COLUMN edam.source_id IS 'FK to SOURCE.SOURCE_ID.';
COMMENT ON COLUMN edam.description IS 'Description or comment.';
COMMENT ON COLUMN edam.obj_url IS 'URL of the object (relative for local links or complete for external links).';
COMMENT ON COLUMN edam.format_name IS 'Unique name to create download files.';
COMMENT ON COLUMN edam.display_name IS 'Public display name.';
ALTER TABLE edam ADD CONSTRAINT edam_uk UNIQUE (format_name);
ALTER TABLE edam ADD CONSTRAINT edam_namespace_ck CHECK (EDAM_NAMESPACE IN ('data','format','operation','topic'));
CREATE UNIQUE INDEX edamid_uk_index ON edam (edamid);
CREATE INDEX edam_source_index ON edam (source_id);

DROP TABLE IF EXISTS edam_alias CASCADE;
CREATE TABLE edam_alias (
	alias_id bigint NOT NULL DEFAULT nextval('alias_seq'),
	display_name varchar(500) NOT NULL,
	source_id bigint NOT NULL,
	edam_id bigint NOT NULL,
	alias_type varchar(40) NOT NULL,
	date_created timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	created_by varchar(12) NOT NULL,
	CONSTRAINT edam_alias_pk PRIMARY KEY (alias_id)
) ;
COMMENT ON TABLE edam_alias IS 'Other names or synonyms for a EDAM term.';
COMMENT ON COLUMN edam_alias.display_name IS 'Public display name.';
COMMENT ON COLUMN edam_alias.created_by IS 'Username of the person who entered the record into the database.';
COMMENT ON COLUMN edam_alias.source_id IS 'FK to SOURCE.SOURCE_ID.';
COMMENT ON COLUMN edam_alias.alias_type IS 'Type of alias (BROAD, EXACT, RELATED, NARROW).';
COMMENT ON COLUMN edam_alias.edam_id IS 'FK to EDAM.EDAM_ID.';
COMMENT ON COLUMN edam_alias.alias_id IS 'Unique identifier (serial number).';
COMMENT ON COLUMN edam_alias.date_created IS 'Date the record was entered into the database.';
ALTER TABLE edam_alias ADD CONSTRAINT edam_alias_uk UNIQUE (edam_id,display_name,alias_type);
ALTER TABLE edam_alias ADD CONSTRAINT edamalias_type_ck CHECK (ALIAS_TYPE IN ('BROAD','EXACT','RELATED','NARROW'));
CREATE INDEX edamalias_source_fk_index ON edam_alias (source_id);

DROP TABLE IF EXISTS edam_relation CASCADE;
CREATE TABLE edam_relation (
	relation_id bigint NOT NULL DEFAULT nextval('relation_seq'),
	source_id bigint NOT NULL,
	parent_id bigint NOT NULL,
	child_id bigint NOT NULL,
	ro_id bigint NOT NULL,
	date_created timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	created_by varchar(12) NOT NULL,
	CONSTRAINT edam_relation_pk PRIMARY KEY (relation_id)
) ;
COMMENT ON TABLE edam_relation IS 'Relationship between two EDAM terms.';
COMMENT ON COLUMN edam_relation.parent_id IS 'FK to EDAM.EDAM_ID.';
COMMENT ON COLUMN edam_relation.child_id IS 'FK to EDAM.EDAM_ID.';
COMMENT ON COLUMN edam_relation.created_by IS 'Username of the person who entered the record into the database.';
COMMENT ON COLUMN edam_relation.source_id IS 'FK to SOURCE.SOURCE_ID.';
COMMENT ON COLUMN edam_relation.ro_id IS 'FK to RO.RO_ID.';
COMMENT ON COLUMN edam_relation.relation_id IS 'Unique identifier (serial number).';
COMMENT ON COLUMN edam_relation.date_created IS 'Date the record was entered into the database.';
ALTER TABLE edam_relation ADD CONSTRAINT edam_relation_uk UNIQUE (parent_id,child_id,ro_id);
CREATE INDEX edamrelation_source_fk_index ON edam_relation (source_id);
CREATE INDEX edamrelation_child_fk_index ON edam_relation (child_id);
CREATE INDEX edamrelation_ro_fk_index ON edam_relation (ro_id);

DROP TABLE IF EXISTS edam_url CASCADE;
CREATE TABLE edam_url (
	url_id bigint NOT NULL DEFAULT nextval('url_seq'),
	display_name varchar(500) NOT NULL,
	obj_url varchar(500) NOT NULL,
	source_id bigint NOT NULL,
	edam_id bigint NOT NULL,
	url_type varchar(40) NOT NULL,
	date_created timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	created_by varchar(12) NOT NULL,
	CONSTRAINT edam_url_pk PRIMARY KEY (url_id)
) ;
COMMENT ON TABLE edam_url IS 'URLs associated with EDAM terms.';
COMMENT ON COLUMN edam_url.display_name IS 'Public display name.';
COMMENT ON COLUMN edam_url.obj_url IS 'URL of the object (relative for local links or complete for external links).';
COMMENT ON COLUMN edam_url.url_id IS 'Unique identifier (serial number).';
COMMENT ON COLUMN edam_url.url_type IS 'Type of URL (BioPortal, OLS, Ontobee).';
COMMENT ON COLUMN edam_url.source_id IS 'FK to SOURCE.SOURCE_ID.';
COMMENT ON COLUMN edam_url.created_by IS 'Username of the person who entered the record into the database.';
COMMENT ON COLUMN edam_url.date_created IS 'Date the record was entered into the database.';
COMMENT ON COLUMN edam_url.edam_id IS 'FK to EDAM.EDAM_ID.';
ALTER TABLE edam_url ADD CONSTRAINT edam_url_uk UNIQUE (edam_id,display_name,obj_url);
ALTER TABLE edam_url ADD CONSTRAINT edamurl_ck CHECK (URL_TYPE IN ('BioPortal', 'Ontobee', 'OLS'));
CREATE INDEX edam_url_source_fk_index ON edam_url (source_id);

DROP TABLE IF EXISTS go CASCADE;
CREATE TABLE go (
	go_id bigint NOT NULL DEFAULT nextval('object_seq'),
	format_name varchar(100) NOT NULL,
	display_name varchar(500) NOT NULL,
	obj_url varchar(500) NOT NULL,
	source_id bigint NOT NULL,
	goid varchar(20) NOT NULL,
	go_namespace varchar(20) NOT NULL,
	description varchar(2000),
	date_created timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	created_by varchar(12) NOT NULL,
	CONSTRAINT go_pk PRIMARY KEY (go_id)
) ;
COMMENT ON TABLE go IS 'Gene Ontology (GO) terms used to describe genes and gene products.';
COMMENT ON COLUMN go.date_created IS 'Date the record was entered into the database.';
COMMENT ON COLUMN go.source_id IS 'FK to SOURCE.SOURCE_ID.';
COMMENT ON COLUMN go.description IS 'Description or comment.';
COMMENT ON COLUMN go.created_by IS 'Username of the person who entered the record into the database.';
COMMENT ON COLUMN go.goid IS 'Gene Ontology identifier (e.g. GO:0016233).';
COMMENT ON COLUMN go.format_name IS 'Unique name to create download files.';
COMMENT ON COLUMN go.obj_url IS 'URL of the object (relative for local links or complete for external links).';
COMMENT ON COLUMN go.go_id IS 'Unique identifier (serial number).';
COMMENT ON COLUMN go.go_namespace IS 'Three separate domains to describe gene products  (cellular component, biological process, molecular function).';
COMMENT ON COLUMN go.display_name IS 'Public display name.';
ALTER TABLE go ADD CONSTRAINT go_uk UNIQUE (format_name);
ALTER TABLE go ADD CONSTRAINT go_namespace_ck CHECK (GO_NAMESPACE IN ('cellular component','biological process','molecular function'));
CREATE UNIQUE INDEX goid_uk_index ON go (goid);
CREATE INDEX go_source_index ON go (source_id);

DROP TABLE IF EXISTS go_alias CASCADE;
CREATE TABLE go_alias (
	alias_id bigint NOT NULL DEFAULT nextval('alias_seq'),
	display_name varchar(500) NOT NULL,
	source_id bigint NOT NULL,
	go_id bigint NOT NULL,
	alias_type varchar(40) NOT NULL,
	date_created timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	created_by varchar(12) NOT NULL,
	CONSTRAINT go_alias_pk PRIMARY KEY (alias_id)
) ;
COMMENT ON TABLE go_alias IS 'Other names or synonyms for a GO term.';
COMMENT ON COLUMN go_alias.alias_id IS 'Unique identifier (serial number).';
COMMENT ON COLUMN go_alias.alias_type IS 'Type of alias (BROAD, EXACT, RELATED, NARROW).';
COMMENT ON COLUMN go_alias.date_created IS 'Date the record was entered into the database.';
COMMENT ON COLUMN go_alias.created_by IS 'Username of the person who entered the record into the database.';
COMMENT ON COLUMN go_alias.source_id IS 'FK to SOURCE.SOURCE_ID.';
COMMENT ON COLUMN go_alias.go_id IS 'FK to GO.GO_ID.';
COMMENT ON COLUMN go_alias.display_name IS 'Public display name.';
ALTER TABLE go_alias ADD CONSTRAINT go_alias_uk UNIQUE (go_id,display_name,alias_type);
ALTER TABLE go_alias ADD CONSTRAINT goalias_type_ck CHECK (ALIAS_TYPE IN ('BROAD','EXACT','RELATED','NARROW'));
CREATE INDEX goalias_source_fk_index ON go_alias (source_id);

DROP TABLE IF EXISTS go_relation CASCADE;
CREATE TABLE go_relation (
	relation_id bigint NOT NULL DEFAULT nextval('relation_seq'),
	source_id bigint NOT NULL,
	parent_id bigint NOT NULL,
	child_id bigint NOT NULL,
	ro_id bigint NOT NULL,
	date_created timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	created_by varchar(12) NOT NULL,
	CONSTRAINT go_relation_pk PRIMARY KEY (relation_id)
) ;
COMMENT ON TABLE go_relation IS 'Relationship between two GO terms.';
COMMENT ON COLUMN go_relation.relation_id IS 'Unique identifier (serial number).';
COMMENT ON COLUMN go_relation.source_id IS 'FK to SOURCE.SOURCE_ID.';
COMMENT ON COLUMN go_relation.ro_id IS 'FK to RO.RO_ID.';
COMMENT ON COLUMN go_relation.created_by IS 'Username of the person who entered the record into the database.';
COMMENT ON COLUMN go_relation.date_created IS 'Date the record was entered into the database.';
COMMENT ON COLUMN go_relation.child_id IS 'FK to GO.GO_ID.';
COMMENT ON COLUMN go_relation.parent_id IS 'FK to GO.GO_ID.';
ALTER TABLE go_relation ADD CONSTRAINT go_relation_uk UNIQUE (parent_id,child_id,ro_id);
CREATE INDEX gorelation_child_fk_index ON go_relation (child_id);
CREATE INDEX gorelation_ro_fk_index ON go_relation (ro_id);
CREATE INDEX gorelation_source_fk_index ON go_relation (source_id);

DROP TABLE IF EXISTS go_url CASCADE;
CREATE TABLE go_url (
	url_id bigint NOT NULL DEFAULT nextval('url_seq'),
	display_name varchar(500) NOT NULL,
	obj_url varchar(500) NOT NULL,
	source_id bigint NOT NULL,
	go_id bigint NOT NULL,
	url_type varchar(40) NOT NULL,
	date_created timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	created_by varchar(12) NOT NULL,
	CONSTRAINT go_url_pk PRIMARY KEY (url_id)
) ;
COMMENT ON TABLE go_url IS 'URLs associated with GO terms.';
COMMENT ON COLUMN go_url.url_id IS 'Unique identifier (serial number).';
COMMENT ON COLUMN go_url.obj_url IS 'URL of the object (relative for local links or complete for external links).';
COMMENT ON COLUMN go_url.display_name IS 'Public display name (GO, Amigo).';
COMMENT ON COLUMN go_url.go_id IS 'FK to GO.GO_ID.';
COMMENT ON COLUMN go_url.date_created IS 'Date the record was entered into the database.';
COMMENT ON COLUMN go_url.url_type IS 'Type of URL (GO, Amigo).';
COMMENT ON COLUMN go_url.created_by IS 'Username of the person who entered the record into the database.';
COMMENT ON COLUMN go_url.source_id IS 'FK to SOURCE.SOURCE_ID.';
ALTER TABLE go_url ADD CONSTRAINT go_url_uk UNIQUE (go_id,display_name,obj_url);
ALTER TABLE go_url ADD CONSTRAINT gourl_type_ck CHECK (URL_TYPE IN ('Amigo','GO'));
CREATE INDEX gourl_source_fk_index ON go_url (source_id);

DROP TABLE IF EXISTS keyword CASCADE;
CREATE TABLE keyword (
	keyword_id bigint NOT NULL DEFAULT nextval('object_seq'),
	format_name varchar(100) NOT NULL,
	display_name varchar(500) NOT NULL,
	obj_url varchar(500) NOT NULL,
	source_id bigint NOT NULL,
	description varchar(500),
	date_created timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	created_by varchar(12) NOT NULL,
	CONSTRAINT keyword_pk PRIMARY KEY (keyword_id)
) ;
COMMENT ON TABLE keyword IS 'Controlled vocabulary to describe broad categories of biology, used to filter or group data.';
COMMENT ON COLUMN keyword.date_created IS 'Date the record was entered into the database.';
COMMENT ON COLUMN keyword.description IS 'Description or comment.';
COMMENT ON COLUMN keyword.created_by IS 'Username of the person who entered the record into the database.';
COMMENT ON COLUMN keyword.source_id IS 'FK to SOURCE.SOURCE_ID.';
COMMENT ON COLUMN keyword.keyword_id IS 'Unique identifier (serial number).';
COMMENT ON COLUMN keyword.format_name IS 'Unique name to create download files.';
COMMENT ON COLUMN keyword.obj_url IS 'URL of the object (relative for local links or complete for external links).';
COMMENT ON COLUMN keyword.display_name IS 'Public display name.';
ALTER TABLE keyword ADD CONSTRAINT keyword_uk UNIQUE (format_name);
CREATE INDEX keyword_source_fk ON keyword (source_id);
CREATE INDEX keyword_display_name ON keyword (display_name);

DROP TABLE IF EXISTS obi CASCADE;
CREATE TABLE obi (
	obi_id bigint NOT NULL DEFAULT nextval('object_seq'),
	format_name varchar(100) NOT NULL,
	display_name varchar(500) NOT NULL,
	obj_url varchar(500) NOT NULL,
	source_id bigint NOT NULL,
	obiid varchar(20) NOT NULL,
	description varchar(2000),
	date_created timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	created_by varchar(12) NOT NULL,
	CONSTRAINT obi_pk PRIMARY KEY (obi_id)
) ;
COMMENT ON TABLE obi IS 'Ontology for Biomedical Investigations (OBI) describes biomedical studies.';
COMMENT ON COLUMN obi.obiid IS 'Biomedical investigations identifier (e.g. OBI:0000185).';
COMMENT ON COLUMN obi.format_name IS 'Unique name to create download files.';
COMMENT ON COLUMN obi.obi_id IS 'Unique identifier (serial number).';
COMMENT ON COLUMN obi.obj_url IS 'URL of the object (relative for local links or complete for external links).';
COMMENT ON COLUMN obi.display_name IS 'Public display name.';
COMMENT ON COLUMN obi.date_created IS 'Date the record was entered into the database.';
COMMENT ON COLUMN obi.description IS 'Description or comment.';
COMMENT ON COLUMN obi.source_id IS 'FK to SOURCE.SOURCE_ID.';
COMMENT ON COLUMN obi.created_by IS 'Username of the person who entered the record into the database.';
ALTER TABLE obi ADD CONSTRAINT obi_uk UNIQUE (format_name);
CREATE INDEX obi_source_fk_index ON obi (source_id);
CREATE UNIQUE INDEX obiid_uk_index ON obi (obiid);

DROP TABLE IF EXISTS obi_relation CASCADE;
CREATE TABLE obi_relation (
	relation_id bigint NOT NULL DEFAULT nextval('relation_seq'),
	source_id bigint NOT NULL,
	parent_id bigint NOT NULL,
	child_id bigint NOT NULL,
	ro_id bigint NOT NULL,
	date_created timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	created_by varchar(12) NOT NULL,
	CONSTRAINT obi_relation_pk PRIMARY KEY (relation_id)
) ;
COMMENT ON TABLE obi_relation IS 'Relationship between two biomedical investigation ontology terms.';
COMMENT ON COLUMN obi_relation.child_id IS 'FK to OBI.OBI_ID.';
COMMENT ON COLUMN obi_relation.parent_id IS 'FK to OBI.OBI_ID.';
COMMENT ON COLUMN obi_relation.date_created IS 'Date the record was entered into the database.';
COMMENT ON COLUMN obi_relation.ro_id IS 'FK to RO.RO_ID.';
COMMENT ON COLUMN obi_relation.created_by IS 'Username of the person who entered the record into the database.';
COMMENT ON COLUMN obi_relation.source_id IS 'FK to SOURCE.SOURCE_ID.';
COMMENT ON COLUMN obi_relation.relation_id IS 'Unique identifier (serial number).';
ALTER TABLE obi_relation ADD CONSTRAINT obi_relation_uk UNIQUE (parent_id,child_id,ro_id);
CREATE INDEX obirelation_child_fk_index ON obi_relation (child_id);
CREATE INDEX obirelation_source_fk_index ON obi_relation (source_id);
CREATE INDEX obirelation_ro_fk_index ON obi_relation (ro_id);

DROP TABLE IF EXISTS obi_url CASCADE;
CREATE TABLE obi_url (
	url_id bigint NOT NULL DEFAULT nextval('url_seq'),
	display_name varchar(500) NOT NULL,
	obj_url varchar(500) NOT NULL,
	source_id bigint NOT NULL,
	obi_id bigint NOT NULL,
	url_type varchar(40) NOT NULL,
	date_created timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	created_by varchar(12) NOT NULL,
	CONSTRAINT obi_url_pk PRIMARY KEY (url_id)
) ;
COMMENT ON TABLE obi_url IS 'URLs associated with biomedical investigations.';
COMMENT ON COLUMN obi_url.obj_url IS 'URL of the object (relative for local links or complete for external links).';
COMMENT ON COLUMN obi_url.obi_id IS 'FK to OBI.OBI_ID.';
COMMENT ON COLUMN obi_url.url_id IS 'Unique identifier (serial number).';
COMMENT ON COLUMN obi_url.display_name IS 'Public display name (Ontobee, OLS, BioPortal).';
COMMENT ON COLUMN obi_url.date_created IS 'Date the record was entered into the database.';
COMMENT ON COLUMN obi_url.source_id IS 'FK to SOURCE.SOURCE_ID.';
COMMENT ON COLUMN obi_url.created_by IS 'Username of the person who entered the record into the database.';
COMMENT ON COLUMN obi_url.url_type IS 'Type of URL (Ontobee, OLS, BioPortal).';
ALTER TABLE obi_url ADD CONSTRAINT obi_url_uk UNIQUE (obi_id,display_name,obj_url);
ALTER TABLE obi_url ADD CONSTRAINT obiurl_type_ck CHECK (URL_TYPE IN ('Ontobee', 'OLS', 'BioPortal'));
ALTER TABLE obi_url ADD CONSTRAINT obiurl_display_name_ck CHECK (DISPLAY_NAME IN ('Ontobee', 'OLS', 'BioPortal'));
CREATE INDEX obiurl_source_fk_index ON obi_url (source_id);

DROP TABLE IF EXISTS psimod CASCADE;
CREATE TABLE psimod (
	psimod_id bigint NOT NULL DEFAULT nextval('object_seq'),
	format_name varchar(100) NOT NULL,
	display_name varchar(500) NOT NULL,
	obj_url varchar(500) NOT NULL,
	source_id bigint NOT NULL,
	psimodid varchar(20) NOT NULL,
	description varchar(2000),
	date_created timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	created_by varchar(12) NOT NULL,
	CONSTRAINT psimod_pk PRIMARY KEY (psimod_id)
) ;
COMMENT ON TABLE psimod IS 'Protein modification ontology (PSI-MOD) developed by the Proteomics Standards Initiative (PSI).';
COMMENT ON COLUMN psimod.date_created IS 'Date the record was entered into the database.';
COMMENT ON COLUMN psimod.description IS 'Description or comment.';
COMMENT ON COLUMN psimod.created_by IS 'Username of the person who entered the record into the database.';
COMMENT ON COLUMN psimod.source_id IS 'FK to SOURCE.SOURCE_ID.';
COMMENT ON COLUMN psimod.obj_url IS 'URL of the object (relative for local links or complete for external links).';
COMMENT ON COLUMN psimod.format_name IS 'Unique name to create download files.';
COMMENT ON COLUMN psimod.psimod_id IS 'Unique identifier (serial number).';
COMMENT ON COLUMN psimod.psimodid IS 'Protein modification ontology identifier (e.g., MOD:01152).';
COMMENT ON COLUMN psimod.display_name IS 'Public display name.';
ALTER TABLE psimod ADD CONSTRAINT psimod_uk UNIQUE (format_name);
CREATE UNIQUE INDEX psimodid_uk_index ON psimod (psimodid);
CREATE INDEX psimod_source_fk_index ON psimod (source_id);

DROP TABLE IF EXISTS psimod_relation CASCADE;
CREATE TABLE psimod_relation (
	relation_id bigint NOT NULL DEFAULT nextval('relation_seq'),
	source_id bigint NOT NULL,
	parent_id bigint NOT NULL,
	child_id bigint NOT NULL,
	ro_id bigint NOT NULL,
	date_created timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	created_by varchar(12) NOT NULL,
	CONSTRAINT psimod_relation_pk PRIMARY KEY (relation_id)
) ;
COMMENT ON TABLE psimod_relation IS 'Relationship between two protein modification ontology terms.';
COMMENT ON COLUMN psimod_relation.relation_id IS 'Unique identifier (serial number).';
COMMENT ON COLUMN psimod_relation.ro_id IS 'FK to RO.RO_ID.';
COMMENT ON COLUMN psimod_relation.source_id IS 'FK to SOURCE.SOURCE_ID.';
COMMENT ON COLUMN psimod_relation.created_by IS 'Username of the person who entered the record into the database.';
COMMENT ON COLUMN psimod_relation.date_created IS 'Date the record was entered into the database.';
COMMENT ON COLUMN psimod_relation.child_id IS 'FK to PSIMOD.PSIMOD_ID.';
COMMENT ON COLUMN psimod_relation.parent_id IS 'FK to PSIMOD.PSIMOD_ID.';
ALTER TABLE psimod_relation ADD CONSTRAINT psimod_relation_uk UNIQUE (parent_id,child_id,ro_id);
CREATE INDEX psimodrelation_ro_fk_index ON psimod_relation (ro_id);
CREATE INDEX psimodrelation_child_fk_index ON psimod_relation (child_id);
CREATE INDEX psimodrelation_source_fk_index ON psimod_relation (source_id);

DROP TABLE IF EXISTS psimod_url CASCADE;
CREATE TABLE psimod_url (
	url_id bigint NOT NULL DEFAULT nextval('url_seq'),
	display_name varchar(500) NOT NULL,
	obj_url varchar(500) NOT NULL,
	source_id bigint NOT NULL,
	psimod_id bigint NOT NULL,
	url_type varchar(40) NOT NULL,
	date_created timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	created_by varchar(12) NOT NULL,
	CONSTRAINT psimod_url_pk PRIMARY KEY (url_id)
) ;
COMMENT ON TABLE psimod_url IS 'URLs associated with the protein modification ontology.';
COMMENT ON COLUMN psimod_url.display_name IS 'Public display name (BioPortal, OLS, Ontobee).';
COMMENT ON COLUMN psimod_url.psimod_id IS 'FK to PSIMOD.PSIMOD_ID.';
COMMENT ON COLUMN psimod_url.obj_url IS 'URL of the object (relative for local links or complete for external links).';
COMMENT ON COLUMN psimod_url.url_id IS 'Unique identifier (serial number).';
COMMENT ON COLUMN psimod_url.url_type IS 'Type of URL (BioPortal, OLS, Ontobee).';
COMMENT ON COLUMN psimod_url.source_id IS 'FK to SOURCE.SOURCE_ID.';
COMMENT ON COLUMN psimod_url.created_by IS 'Username of the person who entered the record into the database.';
COMMENT ON COLUMN psimod_url.date_created IS 'Date the record was entered into the database.';
ALTER TABLE psimod_url ADD CONSTRAINT psimod_url_uk UNIQUE (psimod_id,display_name,obj_url);
ALTER TABLE psimod_url ADD CONSTRAINT psimodurl_type_ck CHECK (URL_TYPE IN ('BioPortal', 'OLS', 'Ontobee'));
ALTER TABLE psimod_url ADD CONSTRAINT psimodurl_display_name_ck CHECK (DISPLAY_NAME IN ('BioPortal', 'OLS', 'Ontobee'));
CREATE INDEX psimodurl_source_fk_index ON psimod_url (source_id);

DROP TABLE IF EXISTS ro CASCADE;
CREATE TABLE ro (
	ro_id bigint NOT NULL DEFAULT nextval('object_seq'),
	format_name varchar(100) NOT NULL,
	display_name varchar(500) NOT NULL,
	obj_url varchar(500) NOT NULL,
	source_id bigint NOT NULL,
	roid varchar(20) NOT NULL,
	description varchar(1000),
	date_created timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	created_by varchar(12) NOT NULL,
	CONSTRAINT ro_pk PRIMARY KEY (ro_id)
) ;
COMMENT ON TABLE ro IS 'Relation Ontology (RO) used to describe data relationships.';
COMMENT ON COLUMN ro.created_by IS 'Username of the person who entered the record into the database.';
COMMENT ON COLUMN ro.description IS 'Description or comment.';
COMMENT ON COLUMN ro.ro_id IS 'Unique identifier (serial number).';
COMMENT ON COLUMN ro.source_id IS 'FK to SOURCE.SOURCE_ID.';
COMMENT ON COLUMN ro.date_created IS 'Date the record was entered into the database.';
COMMENT ON COLUMN ro.roid IS 'Relation identifier  (e.g., RO:0002434).';
COMMENT ON COLUMN ro.display_name IS 'Public display name.';
COMMENT ON COLUMN ro.obj_url IS 'URL of the object (relative for local links or complete for external links).';
COMMENT ON COLUMN ro.format_name IS 'Unique name to create download files.';
ALTER TABLE ro ADD CONSTRAINT ro_uk UNIQUE (format_name);
CREATE UNIQUE INDEX roid_uk_index ON ro (roid);
CREATE INDEX ro_source_fk_index ON ro (source_id);

DROP TABLE IF EXISTS ro_relation CASCADE;
CREATE TABLE ro_relation (
	relation_id bigint NOT NULL DEFAULT nextval('relation_seq'),
	source_id bigint NOT NULL,
	parent_id bigint NOT NULL,
	child_id bigint NOT NULL,
	relation_type varchar(40) NOT NULL,
	date_created timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	created_by varchar(12) NOT NULL,
	CONSTRAINT ro_relation_pk PRIMARY KEY (relation_id)
) ;
COMMENT ON TABLE ro_relation IS 'Relationship between two relations.';
COMMENT ON COLUMN ro_relation.relation_id IS 'Unique identifier (serial number).';
COMMENT ON COLUMN ro_relation.created_by IS 'Username of the person who entered the record into the database.';
COMMENT ON COLUMN ro_relation.source_id IS 'FK to SOURCE.SOURCE_ID.';
COMMENT ON COLUMN ro_relation.date_created IS 'Date the record was entered into the database.';
COMMENT ON COLUMN ro_relation.relation_type IS 'Type of relation (is a).';
COMMENT ON COLUMN ro_relation.parent_id IS 'FK to RO.RO_ID.';
COMMENT ON COLUMN ro_relation.child_id IS 'FK to RO.RO_ID.';
ALTER TABLE ro_relation ADD CONSTRAINT ro_relation_uk UNIQUE (parent_id,child_id,relation_type);
ALTER TABLE ro_relation ADD CONSTRAINT rorelation_type_ck CHECK (RELATION_TYPE IN ('is a'));
CREATE INDEX rorelation_source_fk_index ON ro_relation (source_id);
CREATE INDEX rorelation_child_fk_index ON ro_relation (child_id);

DROP TABLE IF EXISTS ro_url CASCADE;
CREATE TABLE ro_url (
	url_id bigint NOT NULL DEFAULT nextval('url_seq'),
	display_name varchar(500) NOT NULL,
	obj_url varchar(500) NOT NULL,
	source_id bigint NOT NULL,
	ro_id bigint NOT NULL,
	url_type varchar(40) NOT NULL,
	date_created timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	created_by varchar(12) NOT NULL,
	CONSTRAINT ro_url_pk PRIMARY KEY (url_id)
) ;
COMMENT ON TABLE ro_url IS 'URLs associated with the relation ontology.';
COMMENT ON COLUMN ro_url.date_created IS 'Date the record was entered into the database.';
COMMENT ON COLUMN ro_url.ro_id IS 'FK to RO.RO_ID.';
COMMENT ON COLUMN ro_url.source_id IS 'FK to SOURCE.SOURCE_ID.';
COMMENT ON COLUMN ro_url.created_by IS 'Username of the person who entered the record into the database.';
COMMENT ON COLUMN ro_url.url_type IS 'Type of URL (Ontobee, OLS).';
COMMENT ON COLUMN ro_url.url_id IS 'Unique identifier (serial number).';
COMMENT ON COLUMN ro_url.obj_url IS 'URL of the object (relative for local links or complete for external links).';
COMMENT ON COLUMN ro_url.display_name IS 'Public display name (Ontobee, OLS).';
ALTER TABLE ro_url ADD CONSTRAINT ro_url_uk UNIQUE (ro_id,display_name,obj_url);
ALTER TABLE ro_url ADD CONSTRAINT rourl_display_name_ck CHECK (DISPLAY_NAME IN ('Ontobee', 'OLS'));
ALTER TABLE ro_url ADD CONSTRAINT rourl_type_ck CHECK (URL_TYPE IN ('Ontobee', 'OLS'));
CREATE INDEX rourl_source_fk_index ON ro_url (source_id);

DROP TABLE IF EXISTS so CASCADE;
CREATE TABLE so (
	so_id bigint NOT NULL DEFAULT nextval('object_seq'),
	format_name varchar(100) NOT NULL,
	display_name varchar(500) NOT NULL,
	obj_url varchar(500) NOT NULL,
	source_id bigint NOT NULL,
	soid varchar(20) NOT NULL,
	description varchar(2000),
	date_created timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	created_by varchar(12) NOT NULL,
	CONSTRAINT so_pk PRIMARY KEY (so_id)
) ;
COMMENT ON TABLE so IS 'Sequence features as defined by the Sequence Ontology (SO).';
COMMENT ON COLUMN so.format_name IS 'Unique name to create download files.';
COMMENT ON COLUMN so.obj_url IS 'URL of the object (relative for local links or complete for external links).';
COMMENT ON COLUMN so.so_id IS 'Unique identifier (serial number).';
COMMENT ON COLUMN so.display_name IS 'Public display name.';
COMMENT ON COLUMN so.date_created IS 'Date the record was entered into the database.';
COMMENT ON COLUMN so.soid IS 'Sequence Ontology identifier (e.g., SO:0000368).';
COMMENT ON COLUMN so.description IS 'Description or comment.';
COMMENT ON COLUMN so.created_by IS 'Username of the person who entered the record into the database.';
COMMENT ON COLUMN so.source_id IS 'FK to SOURCE.SOURCE_ID.';
ALTER TABLE so ADD CONSTRAINT so_uk UNIQUE (format_name);
CREATE UNIQUE INDEX soid_uk_index ON so (soid);
CREATE INDEX so_source_fk_index ON so (source_id);

DROP TABLE IF EXISTS so_alias CASCADE;
CREATE TABLE so_alias (
	alias_id bigint NOT NULL DEFAULT nextval('alias_seq'),
	display_name varchar(500) NOT NULL,
	source_id bigint NOT NULL,
	so_id bigint NOT NULL,
	alias_type varchar(40) NOT NULL,
	date_created timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	created_by varchar(12) NOT NULL,
	CONSTRAINT so_alias_pk PRIMARY KEY (alias_id)
) ;
COMMENT ON TABLE so_alias IS 'Other names or synonyms for the sequence feature.';
COMMENT ON COLUMN so_alias.source_id IS 'FK to SOURCE.SOURCE_ID.';
COMMENT ON COLUMN so_alias.created_by IS 'Username of the person who entered the record into the database.';
COMMENT ON COLUMN so_alias.alias_id IS 'Unique identifier (serial number).';
COMMENT ON COLUMN so_alias.alias_type IS 'Type of alias (BROAD, EXACT, RELATED, NARROW).';
COMMENT ON COLUMN so_alias.date_created IS 'Date the record was entered into the database.';
COMMENT ON COLUMN so_alias.display_name IS 'Public display name.';
COMMENT ON COLUMN so_alias.so_id IS 'FK to SO.SO_ID.';
ALTER TABLE so_alias ADD CONSTRAINT so_alias_uk UNIQUE (so_id,display_name,alias_type);
ALTER TABLE so_alias ADD CONSTRAINT soalias_type_ck CHECK (ALIAS_TYPE IN ('BROAD','EXACT','RELATED','NARROW'));
CREATE INDEX soalias_source_fk_index ON so_alias (source_id);

DROP TABLE IF EXISTS so_relation CASCADE;
CREATE TABLE so_relation (
	relation_id bigint NOT NULL DEFAULT nextval('relation_seq'),
	source_id bigint NOT NULL,
	parent_id bigint NOT NULL,
	child_id bigint NOT NULL,
	ro_id bigint NOT NULL,
	date_created timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	created_by varchar(12) NOT NULL,
	CONSTRAINT so_relation_pk PRIMARY KEY (relation_id)
) ;
COMMENT ON TABLE so_relation IS 'Relationship between two sequence features.';
COMMENT ON COLUMN so_relation.parent_id IS 'FK to SO.SO_ID.';
COMMENT ON COLUMN so_relation.child_id IS 'FK to SO.SO_ID.';
COMMENT ON COLUMN so_relation.date_created IS 'Date the record was entered into the database.';
COMMENT ON COLUMN so_relation.source_id IS 'FK to SOURCE.SOURCE_ID.';
COMMENT ON COLUMN so_relation.ro_id IS 'FK to RO.RO_ID.';
COMMENT ON COLUMN so_relation.created_by IS 'Username of the person who entered the record into the database.';
COMMENT ON COLUMN so_relation.relation_id IS 'Unique identifier (serial number).';
ALTER TABLE so_relation ADD CONSTRAINT so_relation_uk UNIQUE (parent_id,child_id,ro_id);
CREATE INDEX sorelation_ro_fk_index ON so_relation (ro_id);
CREATE INDEX sorelation_source_fk_index ON so_relation (source_id);
CREATE INDEX sorelation_child_fk_index ON so_relation (child_id);

DROP TABLE IF EXISTS so_url CASCADE;
CREATE TABLE so_url (
	url_id bigint NOT NULL DEFAULT nextval('url_seq'),
	display_name varchar(500) NOT NULL,
	obj_url varchar(500) NOT NULL,
	source_id bigint NOT NULL,
	so_id bigint NOT NULL,
	url_type varchar(40) NOT NULL,
	date_created timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	created_by varchar(12) NOT NULL,
	CONSTRAINT so_url_pk PRIMARY KEY (url_id)
) ;
COMMENT ON TABLE so_url IS 'URLs associated with sequence features.';
COMMENT ON COLUMN so_url.so_id IS 'FK to SO.SO_ID.';
COMMENT ON COLUMN so_url.obj_url IS 'URL of the object (relative for local links or complete for external links).';
COMMENT ON COLUMN so_url.url_id IS 'Unique identifier (serial number).';
COMMENT ON COLUMN so_url.display_name IS 'Public display name (MISO, OLS, Ontobee, BioBortal).';
COMMENT ON COLUMN so_url.date_created IS 'Date the record was entered into the database.';
COMMENT ON COLUMN so_url.url_type IS 'Type of URL (MISO, OLS, Ontobee, BioPortal).';
COMMENT ON COLUMN so_url.created_by IS 'Username of the person who entered the record into the database.';
COMMENT ON COLUMN so_url.source_id IS 'FK to SOURCE.SOURCE_ID.';
ALTER TABLE so_url ADD CONSTRAINT so_url_uk UNIQUE (so_id,display_name,obj_url);
ALTER TABLE so_url ADD CONSTRAINT sourl_type_ck CHECK (URL_TYPE IN ('MISO','OLS', 'Ontobee', 'BioPortal'));
ALTER TABLE so_url ADD CONSTRAINT sourl_display_name_ck CHECK (DISPLAY_NAME IN ('MISO','OLS', 'Ontobee', 'BioPortal'));
CREATE INDEX sourl_source_fk_index ON so_url (source_id);

DROP TABLE IF EXISTS taxonomy CASCADE;
CREATE TABLE taxonomy (
	taxonomy_id bigint NOT NULL DEFAULT nextval('object_seq'),
	format_name varchar(100) NOT NULL,
	display_name varchar(500) NOT NULL,
	obj_url varchar(500) NOT NULL,
	source_id bigint NOT NULL,
	taxid varchar(20) NOT NULL,
	common_name varchar(100),
	rank varchar(40) NOT NULL,
	date_created timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	created_by varchar(12) NOT NULL,
	CONSTRAINT taxonomy_pk PRIMARY KEY (taxonomy_id)
) ;
COMMENT ON TABLE taxonomy IS 'Taxonomy information descended from the family Saccharomycetaceae from NCBI.';
COMMENT ON COLUMN taxonomy.date_created IS 'Date the record was entered into the database.';
COMMENT ON COLUMN taxonomy.taxid IS 'Taxonomy identifier assigned by NCBI (from BUD.TAXONOMY.TAXON_ID).';
COMMENT ON COLUMN taxonomy.source_id IS 'FK to SOURCE.SOURCE_ID.';
COMMENT ON COLUMN taxonomy.created_by IS 'Username of the person who entered the record into the database.';
COMMENT ON COLUMN taxonomy.rank IS 'Rank of the taxonomy term from NCBI (e.g., Saccharomyces cerevisiae = species).';
COMMENT ON COLUMN taxonomy.common_name IS 'First common name from NCBI.';
COMMENT ON COLUMN taxonomy.obj_url IS 'Relative URL of the object.';
COMMENT ON COLUMN taxonomy.format_name IS 'Unique name to create download files.';
COMMENT ON COLUMN taxonomy.taxonomy_id IS 'Unique identifier (serial number).';
COMMENT ON COLUMN taxonomy.display_name IS 'Public display name.';
ALTER TABLE taxonomy ADD CONSTRAINT taxonomy_uk UNIQUE (format_name);
CREATE UNIQUE INDEX taxid_uk_index ON taxonomy (taxid);
CREATE INDEX taxonomy_source_fk_index ON taxonomy (source_id);

DROP TABLE IF EXISTS taxonomy_alias CASCADE;
CREATE TABLE taxonomy_alias (
	alias_id bigint NOT NULL DEFAULT nextval('alias_seq'),
	display_name varchar(500) NOT NULL,
	source_id bigint NOT NULL,
	taxonomy_id bigint NOT NULL,
	alias_type varchar(40) NOT NULL,
	date_created timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	created_by varchar(12) NOT NULL,
	CONSTRAINT taxonomy_alias_pk PRIMARY KEY (alias_id)
) ;
COMMENT ON TABLE taxonomy_alias IS 'Synonym or other name of a the taxonomy term from NCBI.';
COMMENT ON COLUMN taxonomy_alias.source_id IS 'FK to SOURCE.SOURCE_ID.';
COMMENT ON COLUMN taxonomy_alias.created_by IS 'Username of the person who entered the record into the database.';
COMMENT ON COLUMN taxonomy_alias.alias_id IS 'Unique identifier (serial number).';
COMMENT ON COLUMN taxonomy_alias.alias_type IS 'Type of alias (Synonym, Secondary common name).';
COMMENT ON COLUMN taxonomy_alias.date_created IS 'Date the record was entered into the database.';
COMMENT ON COLUMN taxonomy_alias.taxonomy_id IS 'FK to TAXONOMY.TAXONOMY_ID.';
COMMENT ON COLUMN taxonomy_alias.display_name IS 'Public display name.';
ALTER TABLE taxonomy_alias ADD CONSTRAINT taxonomy_alias_uk UNIQUE (taxonomy_id,display_name,alias_type);
ALTER TABLE taxonomy_alias ADD CONSTRAINT taxonomyalias_type_ck CHECK (ALIAS_TYPE IN ('Synonym','Secondary common name'));
CREATE INDEX taxonomyalias_source_fk_index ON taxonomy_alias (source_id);

DROP TABLE IF EXISTS taxonomy_relation CASCADE;
CREATE TABLE taxonomy_relation (
	relation_id bigint NOT NULL DEFAULT nextval('relation_seq'),
	source_id bigint NOT NULL,
	parent_id bigint NOT NULL,
	child_id bigint NOT NULL,
	ro_id bigint NOT NULL,
	date_created timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	created_by varchar(12) NOT NULL,
	CONSTRAINT taxonomy_relation_pk PRIMARY KEY (relation_id)
) ;
COMMENT ON TABLE taxonomy_relation IS 'Relationship between the taxonomy terms from NCBI.';
COMMENT ON COLUMN taxonomy_relation.relation_id IS 'Unique identifier (serial number).';
COMMENT ON COLUMN taxonomy_relation.created_by IS 'Username of the person who entered the record into the database.';
COMMENT ON COLUMN taxonomy_relation.ro_id IS 'FK to RO.RO_ID.';
COMMENT ON COLUMN taxonomy_relation.source_id IS 'FK to SOURCE.SOURCE_ID.';
COMMENT ON COLUMN taxonomy_relation.date_created IS 'Date the record was entered into the database.';
COMMENT ON COLUMN taxonomy_relation.child_id IS 'FK to TAXONOMY.TAXONOMY_ID.';
COMMENT ON COLUMN taxonomy_relation.parent_id IS 'FK to TAXONOMY.TAXONOMY_ID.';
ALTER TABLE taxonomy_relation ADD CONSTRAINT taxonomy_relation_uk UNIQUE (parent_id,child_id,ro_id);
CREATE INDEX taxonomyrelation_ro_fk_index ON taxonomy_relation (ro_id);
CREATE INDEX taxonomyrelation_child_fk_index ON taxonomy_relation (child_id);
CREATE INDEX taxonomyrelation_source_fk_index ON taxonomy_relation (source_id);

DROP TABLE IF EXISTS taxonomy_url CASCADE;
CREATE TABLE taxonomy_url (
	url_id bigint NOT NULL DEFAULT nextval('url_seq'),
	display_name varchar(500) NOT NULL,
	obj_url varchar(500) NOT NULL,
	source_id bigint NOT NULL,
	taxonomy_id bigint NOT NULL,
	url_type varchar(40) NOT NULL,
	date_created timestamp NOT NULL DEFAULT LOCALTIMESTAMP,
	created_by varchar(12) NOT NULL,
	CONSTRAINT taxonomy_url_pk PRIMARY KEY (url_id)
) ;
COMMENT ON TABLE taxonomy_url IS 'URLs associated with taxonomy.';
COMMENT ON COLUMN taxonomy_url.url_id IS 'Unique identifier (serial number).';
COMMENT ON COLUMN taxonomy_url.obj_url IS 'URL of the object (relative for local links or complete for external links).';
COMMENT ON COLUMN taxonomy_url.taxonomy_id IS 'FK to TAXONOMY.TAXONOMY_ID.';
COMMENT ON COLUMN taxonomy_url.date_created IS 'Date the record was entered into the database.';
COMMENT ON COLUMN taxonomy_url.url_type IS 'Type of URL (NCBI Taxonomy).';
COMMENT ON COLUMN taxonomy_url.source_id IS 'FK to SOURCE.SOURCE_ID.';
COMMENT ON COLUMN taxonomy_url.created_by IS 'Username of the person who entered the record into the database.';
ALTER TABLE taxonomy_url ADD CONSTRAINT taxonomy_url_uk UNIQUE (taxonomy_id,display_name,obj_url);
ALTER TABLE taxonomy_url ADD CONSTRAINT taxonomyurl_display_name_ck CHECK (DISPLAY_NAME IN ('NCBI Taxonomy'));
ALTER TABLE taxonomy_url ADD CONSTRAINT taxonomyurl_type_ck CHECK (URL_TYPE IN ('NCBI Taxonomy'));
CREATE INDEX taxonomyurl_source_fk_index ON taxonomy_url (source_id);
